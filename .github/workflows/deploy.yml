name: Deploy
on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build & Publish
        run: |
          docker build . -t 426782010323.dkr.ecr.us-east-1.amazonaws.com/memuy_api:${{ github.sha }}
          docker push 426782010323.dkr.ecr.us-east-1.amazonaws.com/memuy_api:${{ github.sha }}
  deploy_k8s:
    name: Deploy K8s
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@master
      - run: |
          kubectl config set-cluster k8s --server="${{ secrets.SERVER }}"
          kubectl config set clusters.k8s.certificate-authority-data ${{ secrets.CERTIFICATE_AUTHORITY_DATA }}
          kubectl config set-credentials github --token="${{ secrets.USER_TOKEN }}"
          kubectl config set-context default --cluster=k8s --user=github
          kubectl config use-context default
          sed -i "s/\$CI_PIPELINE_ID/${{ github.sha }}/g" deploy/app.yml
          sed -i "s~\$MONGO_URL~${{ secrets.MONGO_URL }}~g" deploy/app.yml
          sed -i "s/\$PORT/${{ secrets.PORT }}/g" deploy/app.yml
          sed -i "s~\$NODE_ENV~${{ secrets.NODE_ENV }}~g" deploy/app.yml
          sed -i "s/\$AWS_ACCESS_KEY_ID/${{ secrets.DEPLOY_AWS_ACCESS_KEY_ID }}/g" deploy/app.yml
          sed -i "s~\$AWS_SECRET_ACCESS_KEY~${{ secrets.DEPLOY_AWS_SECRET_ACCESS_KEY }}~g" deploy/app.yml
          sed -i "s/\$S3_BUCKET/${{ secrets.S3_BUCKET }}/g" deploy/app.yml
          sed -i "s~\$SENTRY_DNS~${{ secrets.SENTRY_DNS }}~g" deploy/app.yml
          cat deploy/*.yml > tmp
          kubectl apply -f tmp
